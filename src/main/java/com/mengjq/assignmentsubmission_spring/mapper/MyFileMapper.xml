<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mengjq.assignmentsubmission_spring.mapper.MyFileMapper">
    <resultMap id="BaseResultMap" type="com.mengjq.assignmentsubmission_spring.model.MyFile">
        <id column="file_id" jdbcType="INTEGER" property="fileId"/>
        <result column="file_size" jdbcType="INTEGER" property="fileSize"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="assign_id" jdbcType="INTEGER" property="assignId"/>
        <result column="raw_name" jdbcType="CHAR" property="rawName"/>
        <result column="upload_time" jdbcType="TIMESTAMP" property="uploadTime"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
               type="com.mengjq.assignmentsubmission_spring.model.MyFileWithBLOBs">
        <result column="formatName" jdbcType="LONGVARCHAR" property="formatname"/>
        <result column="hash" jdbcType="LONGVARCHAR" property="hash"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        file_id
        , file_size, user_id, assign_id, raw_name, upload_time
    </sql>
    <sql id="Blob_Column_List">
        formatName
        , hash
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.mengjq.assignmentsubmission_spring.model.MyFileExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from file
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByExample" parameterType="com.mengjq.assignmentsubmission_spring.model.MyFileExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from file
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from file
        where file_id = #{fileId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from file
        where file_id = #{fileId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.mengjq.assignmentsubmission_spring.model.MyFileExample">
        delete from file
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.mengjq.assignmentsubmission_spring.model.MyFileWithBLOBs">
        insert into file (file_id, file_size, user_id,
                          assign_id, raw_name, upload_time,
                          formatName, hash)
        values (#{fileId,jdbcType=INTEGER}, #{fileSize,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
                #{assignId,jdbcType=INTEGER}, #{rawName,jdbcType=CHAR}, #{uploadTime,jdbcType=TIMESTAMP},
                #{formatname,jdbcType=LONGVARCHAR}, #{hash,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.mengjq.assignmentsubmission_spring.model.MyFileWithBLOBs">
        insert into file
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fileId != null">
                file_id,
            </if>
            <if test="fileSize != null">
                file_size,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="assignId != null">
                assign_id,
            </if>
            <if test="rawName != null">
                raw_name,
            </if>
            <if test="uploadTime != null">
                upload_time,
            </if>
            <if test="formatname != null">
                formatName,
            </if>
            <if test="hash != null">
                hash,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fileId != null">
                #{fileId,jdbcType=INTEGER},
            </if>
            <if test="fileSize != null">
                #{fileSize,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="assignId != null">
                #{assignId,jdbcType=INTEGER},
            </if>
            <if test="rawName != null">
                #{rawName,jdbcType=CHAR},
            </if>
            <if test="uploadTime != null">
                #{uploadTime,jdbcType=TIMESTAMP},
            </if>
            <if test="formatname != null">
                #{formatname,jdbcType=LONGVARCHAR},
            </if>
            <if test="hash != null">
                #{hash,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.mengjq.assignmentsubmission_spring.model.MyFileExample"
            resultType="java.lang.Long">
        select count(*) from file
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update file
        <set>
            <if test="record.fileId != null">
                file_id = #{record.fileId,jdbcType=INTEGER},
            </if>
            <if test="record.fileSize != null">
                file_size = #{record.fileSize,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.assignId != null">
                assign_id = #{record.assignId,jdbcType=INTEGER},
            </if>
            <if test="record.rawName != null">
                raw_name = #{record.rawName,jdbcType=CHAR},
            </if>
            <if test="record.uploadTime != null">
                upload_time = #{record.uploadTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.formatname != null">
                formatName = #{record.formatname,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.hash != null">
                hash = #{record.hash,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update file
        set file_id = #{record.fileId,jdbcType=INTEGER},
        file_size = #{record.fileSize,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        assign_id = #{record.assignId,jdbcType=INTEGER},
        raw_name = #{record.rawName,jdbcType=CHAR},
        upload_time = #{record.uploadTime,jdbcType=TIMESTAMP},
        formatName = #{record.formatname,jdbcType=LONGVARCHAR},
        hash = #{record.hash,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update file
        set file_id = #{record.fileId,jdbcType=INTEGER},
        file_size = #{record.fileSize,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        assign_id = #{record.assignId,jdbcType=INTEGER},
        raw_name = #{record.rawName,jdbcType=CHAR},
        upload_time = #{record.uploadTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.mengjq.assignmentsubmission_spring.model.MyFileWithBLOBs">
        update file
        <set>
            <if test="fileSize != null">
                file_size = #{fileSize,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="assignId != null">
                assign_id = #{assignId,jdbcType=INTEGER},
            </if>
            <if test="rawName != null">
                raw_name = #{rawName,jdbcType=CHAR},
            </if>
            <if test="uploadTime != null">
                upload_time = #{uploadTime,jdbcType=TIMESTAMP},
            </if>
            <if test="formatname != null">
                formatName = #{formatname,jdbcType=LONGVARCHAR},
            </if>
            <if test="hash != null">
                hash = #{hash,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where file_id = #{fileId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs"
            parameterType="com.mengjq.assignmentsubmission_spring.model.MyFileWithBLOBs">
        update file
        set file_size   = #{fileSize,jdbcType=INTEGER},
            user_id     = #{userId,jdbcType=INTEGER},
            assign_id   = #{assignId,jdbcType=INTEGER},
            raw_name    = #{rawName,jdbcType=CHAR},
            upload_time = #{uploadTime,jdbcType=TIMESTAMP},
            formatName  = #{formatname,jdbcType=LONGVARCHAR},
            hash        = #{hash,jdbcType=LONGVARCHAR}
        where file_id = #{fileId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mengjq.assignmentsubmission_spring.model.MyFile">
        update file
        set
        -- iterate the columns, if the column is not null, then add the column to the update statement
        for each column in table.columns
        if column.isNotNullable
        then
        <if test="column.javaName != null">
            column.javaName = #{column.javaName,jdbcType=column.jdbcType},
        </if>
        end if
        end for
        where file_id = #{fileId,jdbcType=INTEGER}
    </update>
<!--    <update id="updateByPrimaryKey" parameterType="com.mengjq.assignmentsubmission_spring.model.MyFile">-->
<!--    update file set-->
<!--        &#45;&#45; iterate the columns, if the column is not null, then add the column to the update statement for each column-->
<!--        in table.columns if column.isNotNullable then <if test="column.javaName != null">column.javaName =-->
<!--            #{column.javaName,jdbcType=column.jdbcType},-->
<!--        </if>-->
<!--        <if test="column.javaName == null"> &lt;!&ndash; 输出调试信息 &ndash;&gt;-->
<!--            <if test="_databaseId == 'mysql'">select 'column.javaName is null' as debug_info from dual</if> -->
<!--        </if>-->
<!--        end if end for where file_id = #{fileId,jdbcType=INTEGER}-->
<!--    </update>-->
</mapper>